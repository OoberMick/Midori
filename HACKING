This file is licensed under the terms of the expat license, see the file EXPAT.

It is 4 spaces, no tabs, preferrably at 80 columns per line.

The preferred coding style is explained by example.

Source file example:

    /*
       Copyright
       LICENSE TEXT
    */

    #include "foo.h"

    #include "bar.h"

    #include <glib.h>

    void
    foobar (FooEnum bar, const gchar* foo)
    {
        gint n, i;

        if (!foo)
            return;

        #ifdef BAR_STRICT
        if (bar == FOO_N)
        {
            g_print ("illegal value for 'bar'.\n");
            return;
        }
        #endif

        /* this is an example */
        switch (bar)
        {
        case FOO_FOO:
            n = bar + 1;
            break;
        case FOO_BAR:
            n = bar + 10;
            break;
        default:
            n = 1;
        }

        for (i = 0; i < n; i++)
        {
            g_print ("%s\n", foo);
        }
    }

Header file example:

    /*
       Copyright
       LICENSE TEXT
    */

    #ifndef __FOO_H__
    #define __FOO_H__ 1

    #ifdef HAVE_BAR_H
        #define BAR_STRICT
    #endif

    /* Types */

    typedef enum
    {
        FOO_FOO,
        FOO_BAR,
        FOO_N
    } FooEnum;

    typedef struct
    {
        FooEnum foo_bar;
    } FooStruct;

    /* Declarations */

    void
    foo_bar           (FooEnum      bar,
                       const gchar* foo);

    const gchar*
    foo_foo           (FooStruct foo_struct,
                       guint     number,
                       gboolean  flag);

    #endif /* !__FOO_H__ */
